import { useRef, useState, useEffect } from 'react';
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.scss'
import getSubmissions from '../services/getSubmissions'
import { useRouter } from 'next/router';

export const getStaticProps = async () => {
  const submissions = await getSubmissions(4);
  

  return {
    props: {
      submissions
    }
  }
}

export default function Home({submissions}) {
  const offerForm = useRef();
  const [error, setError] = useState();

  const [formProcessing, setFormProcessing] = useState(false);
  const router = useRouter();
  const [imagePreviewUrl, setImagePreviewUrl] = useState();
  

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (formProcessing) return;
    setError(null);
    setFormProcessing(true);
    const form = new FormData(offerForm.current);
    const payload = {
      firstName: form.get('name'),
      email: form.get('email'),
      message: form.get('message'),
      phone: form.get('phone'),
      code: form.get('code'),

    };

   


    setFormProcessing(false);
    const response = await fetch('/api/submissions', {
      method: 'POST',
      body: JSON.stringify(payload),
      headers: {
        'Content-Type': 'application/json'
      }
    });

    if (response.ok) {
      router.push('/thankyou');
      
    } else {
      const payload = await response.json();
      setFormProcessing(false);
      setError(payload.error?.details[0]?.message);
    }
  };

  // if (loading) {
  //   return <div>Loading...</div>;
  // }

  // if (!loading && !session) {
  //   return <div>Redirecting...</div>;
  // }
  return (
    <div className={styles.container}>
      <Head>
        <title>Next.js + Airtable</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Airtable form</h1>
        <p>This is Next.js and Airtable contest registration form template.</p>
        <form className="form" ref={offerForm} onSubmit={handleSubmit}>

              <div className="fieldWrapper">
                <div className="fieldWrapper--inner">
                  <label htmlFor="firstName">
                    Name
                  </label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    required
                  />
                </div>
              </div>
              <div className="fieldWrapper">
                <div className="fieldWrapper--inner">
                  <label htmlFor="email">
                    Email
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    required
                  />
                </div>
              </div>
              <div className="fieldWrapper">
                <div className="fieldWrapper--inner">
                  <label htmlFor="phone">
                    Numer telefonu
                  </label>
                  <input
                    type="text"
                    id="phone"
                    name="phone"
                    required
                  />
                </div>
              </div>
              <div className="fieldWrapper">
                <div className="fieldWrapper--inner">
                  <label htmlFor="code">
                    Kod z aplikacji
                  </label>
                  <input
                    type="text"
                    id="code"
                    name="code"
                    required
                  />
                </div>
              </div>

              {/* <div className="p-2 w-1/2">
                <div className="relative">
                  <label htmlFor="phone" className="leading-7 text-sm text-gray-600">
                    Mobile phone
                  </label>
                  <input
                    type="text"
                    id="phone"
                    name="phone"
                    required
                    className="w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
                  />
                </div>
              </div> */}
              <div className="fieldWrapper">
                <div className="fieldWrapper--inner">
                  <label htmlFor="message">
                    Message
                  </label>
                  <textarea
                    id="message"
                    name="message"
                    required
                    ></textarea>
                </div>
              </div>


              <div className="fieldWrapper">
                <button
                  disabled={formProcessing}
                  className="submit">
                  {formProcessing ? 'Please wait...' : 'Submit'}
                </button>
                {error && (
                  <div className="errorWrapper">
                    <span className="errorWrapper-inner">
                      Offer not added: {error}
                    </span>
                  </div>
                )}
              </div>
            </form>
      </main>

      <footer className={styles.footer}>

      </footer>
    </div>
  )
}
